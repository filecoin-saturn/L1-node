access_log  /usr/src/app/shared/nginx_log/node-access.log node buffer=256k flush=1m;

limit_req   zone=one burst=1000 nodelay;

root  /usr/src/app/;

location = / {
    add_header 'Strict-Transport-Security'      'max-age=63072000; includeSubDomains; preload' always;
    return 302 https://saturn.tech;
}

location ~ ^/(ipns|api)/ {
    proxy_pass  https://ipfs.io;

    if ($request_method = 'OPTIONS') {
        add_header 'Timing-Allow-Origin'            '*';
        add_header 'Access-Control-Allow-Origin'    '*';
        add_header 'Access-Control-Allow-Methods'   'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers'   'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Max-Age'         1728000;
        add_header 'Content-Type'                   'text/plain; charset=utf-8';
        add_header 'Content-Length'                 0;
        return 204;
    }
}

location /badbits {
    internal;
    if ($request_uri !~ "/ipfs") {
        return 200;
    }

    set $cid_path $request_uri;
    js_content filterCID;
}

location / {
    # TODO: This param is only required for untrusted 3rd party L1 operators.
    # if ($arg_clientId = "") {
    #     return 403;
    # }

    auth_request /badbits;

    car_range;

    js_header_filter ipfsResponse.setHeaders;

    proxy_pass              http://node_backend;
    proxy_buffering         on;
    proxy_http_version      1.1;

    proxy_read_timeout          30m;
    proxy_connect_timeout       121s;
    proxy_ignore_client_abort   on;

    proxy_set_header        Host                $host;
    proxy_set_header        X-Forwarded-For     $remote_addr;
    proxy_set_header        X-If-None-Match     $http_if_none_match;
    proxy_set_header        Connection          "";
    proxy_set_header        Saturn-Transfer-Id  $request_id;

    proxy_cache                 my_cache;
    # TODO: These params add too much cardinality and should eventually be removed,
    # provided the correct response headers can still be returned somehow.
    # $arg_filename, $arg_download, $http_if_none_match
    proxy_cache_key             $uri$format_final$dag_scope;
    proxy_cache_lock            on;
    proxy_cache_valid           200 301 302 403     365d;
    proxy_cache_valid           any                 1m;
    proxy_cache_min_uses        $cache_min_uses;
    proxy_cache_lock_age        30m;
    proxy_cache_lock_timeout    30m;
    proxy_cache_use_stale       error timeout invalid_header updating http_500 http_503 http_429;
    proxy_cache_bypass          $arg_nocache $arg_cachebypass;
    proxy_no_cache              $arg_nocache;

    proxy_hide_header   Saturn-Node-Id;
    proxy_hide_header   Saturn-Node-Version;

    add_header 'Saturn-Node-Id'                 '$node_id' always;
    add_header 'Saturn-Node-Version'            '$node_version' always;
    add_header 'Saturn-Transfer-Id'             $request_id always;
    add_header 'Saturn-Cache-Status'            $upstream_cache_status always;
    add_header 'Server-Timing'                  'nginx;dur=$request_time_ms, nginx_uct;dur=$upstream_connect_time_ms, nginx_uht;dur=$upstream_header_time_ms, nginx_urt;dur=$upstream_response_time_ms' always;
    add_header 'Timing-Allow-Origin'            '*' always;
    add_header 'Strict-Transport-Security'      'max-age=63072000; includeSubDomains; preload' always;
    add_header 'Retry-After'                    $retry_after_seconds always;
    add_header 'Access-Control-Allow-Origin'    '*' always;
    add_header 'Access-Control-Allow-Methods'   'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers'   'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Traceparent' always;
    add_header 'Access-Control-Expose-Headers'  '*' always;
    add_header 'Accept-Ranges'                  'none' always;

    client_max_body_size 10g;

    if ($request_method = 'OPTIONS') {
        add_header 'Timing-Allow-Origin'            '*' always;
        add_header 'Access-Control-Allow-Origin'    '*' always;
        add_header 'Access-Control-Allow-Methods'   'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers'   'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Traceparent' always;
        add_header 'Access-Control-Expose-Headers'  '*' always;
        add_header 'Access-Control-Max-Age'         1728000 always;
        add_header 'Content-Type'                   'text/plain; charset=utf-8';
        add_header 'Content-Length'                 0;
        return 204;
    }

    if ($format_header = 'carv2') {
        return 400 'unsupported CAR version: only version=1 is supported';
    }
}

location = /basic_status {
    stub_status;
}

include /etc/nginx/denylist.conf;
