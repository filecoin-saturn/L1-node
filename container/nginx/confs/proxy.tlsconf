map $http_accept $format_header {
    default                     "";
    "application/vnd.ipld.car" "car";
    "application/vnd.ipld.raw" "raw";
}

# Restrict valid values to prevent cache key explosion.
map $arg_format $format_query {
    default "";
    "car"   "car";
    "raw"   "raw";
}

# Coalesce header & query values to make a single cache key component.
map $format_query $format_final {
    default $format_header;
    "car"   "car";
    "raw"   "raw";
}

server {
    listen 443 default_server ssl http2 reuseport;

    ssl_certificate             /usr/src/app/shared/ssl/node.crt;
    ssl_certificate_key         /usr/src/app/shared/ssl/node.key;
    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_ciphers                 HIGH:!aNULL:!SHA:!RSA; # SHA256/384 and CAMELLIA enabled for compat
    ssl_prefer_server_ciphers   on;
    ssl_session_cache           shared:SSL:100m;
    ssl_session_timeout         365d;
    ssl_session_tickets         off;
    ssl_buffer_size             4k;
    ssl_stapling                on;
    ssl_stapling_verify         on;
    ssl_trusted_certificate     /usr/src/app/shared/ssl/node.crt;
    ssl_early_data              on;

    resolver    8.8.8.8 8.8.4.4 valid=600s;

    server_name _; # This is just an invalid value which will never trigger on a real hostname
    server_name_in_redirect off;

    access_log  /var/log/nginx/node-access.log node buffer=256k;

    limit_req   zone=one burst=200 nodelay;

    root  /usr/src/app/;

    location = / {
        add_header 'Strict-Transport-Security'      'max-age=63072000; includeSubDomains; preload' always;
        return 302 https://strn.network;
    }

    location ~ ^/(ipns|api)/ {
        proxy_pass  https://ipfs.io;

        if ($request_method = 'OPTIONS') {
            add_header 'Timing-Allow-Origin'            '*';
            add_header 'Access-Control-Allow-Origin'    '*';
            add_header 'Access-Control-Allow-Methods'   'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers'   'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Max-Age'         1728000;
            add_header 'Content-Type'                   'text/plain; charset=utf-8';
            add_header 'Content-Length'                 0;
            return 204;
        }
    }

    location / {
        # TODO: This param is only required for untrusted 3rd party L1 operators.
        # if ($arg_clientId = "") {
        #     return 403;
        # }

        proxy_pass              http://node_backend;
        proxy_buffering         on;
        proxy_http_version      1.1;

        proxy_read_timeout          30m;
        proxy_connect_timeout       121s;
        proxy_ignore_client_abort   on;

        proxy_set_header        Host                $host;
        proxy_set_header        X-Real-IP           $remote_addr;
        proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header        Connection          "";
        proxy_set_header        Saturn-Transfer-Id  $request_id;

        proxy_cache                 my_cache;
        proxy_cache_key             $uri$format_final$arg_filename$arg_download;
        proxy_cache_lock            on;
        proxy_cache_valid           200 301 302 410     365d;
        proxy_cache_valid           any                 1m;
        proxy_cache_lock_age        30m;
        proxy_cache_lock_timeout    30m;
        proxy_cache_use_stale       error timeout invalid_header updating http_502 http_503 http_504 http_429;
        proxy_cache_bypass          $arg_nocache;
        proxy_no_cache              $arg_nocache;

        add_header 'Saturn-Cache-Status'            $upstream_cache_status;
        add_header 'Saturn-Transfer-Id'             $request_id;
        add_header 'Timing-Allow-Origin'            '*';
        add_header 'Access-Control-Allow-Origin'    '*' always;
        add_header 'Access-Control-Allow-Methods'   'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers'   'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers'  '*' always;
        add_header 'Strict-Transport-Security'      'max-age=63072000; includeSubDomains; preload' always;

        if ($request_method = 'OPTIONS') {
            add_header 'Timing-Allow-Origin'            '*';
            add_header 'Access-Control-Allow-Origin'    '*';
            add_header 'Access-Control-Allow-Methods'   'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers'   'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Max-Age'         1728000;
            add_header 'Content-Type'                   'text/plain; charset=utf-8';
            add_header 'Content-Length'                 0;
            return 204;
        }
    }

    location ~* ^.*(QmPgVA4M2EGijWDtH59EYPSPXQhahsVUUytrs1wPJwpgBh|bafybeidgnebuxvarpnw2grmkgnamu6cv6|bafkreibk3n7kxz6ep4g6z6wr737jbd3upibwkzskp6olu7at7qa6bhrrc4|QmTuWjNEmtUd2HGqH5UJzBJ83EFE1yVLxsfgQvUmnFDdan|QmXg6yZZaehZuCzUmBQgfXQqsYF1vb1fJxaypXBPHPEXM7|bafkreibbogdqa6ikxpx56m2rcun3h5ygkrujhhqk6jgj3apwii6cgjpa4i|bafybeicp3x52jgy3qhsrwaioemeck7vhnryq2i2dgodkakkixuzruo54wa|bafybeigyoslufnbi5haonpc3yiktbpdyvas7mqprpvb7wx2jsqyyn65oau|bafybeiaywbhyg43vdl3kkgybpbczcijr2cy4me7tozmc23asq3q4l7znqi).*$ {
        return 410;
    }

    location = /basic_status {
        stub_status;
    }
}

server {
    listen 80 default_server reuseport;

    server_name _;

    return 301 https://$host$request_uri;
}
